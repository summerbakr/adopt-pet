{"version":3,"sources":["components/Form.js","components/Edit.js","components/SinglePet.js","components/AllPets.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","useState","name","setName","type","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","className","onSubmit","e","preventDefault","console","log","newPet","axios","post","then","res","data","navigate","catch","err","addNew","onChange","target","value","style","color","message","to","Edit","useEffect","get","_id","single","updatePet","put","SinglePet","pet","setPet","backgroundColor","width","margin","marginBottom","delete","adoptPet","AllPets","pets","setPets","map","key","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.878fbcce.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport {navigate, Link} from '@reach/router';\n\nconst Form =(props)=>{\n    const[name, setName]=useState('');\n    const [type, setType]=useState('')\n    const [description, setDescription]=useState('')\n    const[skill1, setSkill1]=useState('');\n    const[skill2, setSkill2]=useState('');\n    const[skill3, setSkill3]=useState('');\n    const [errors, setErrors]=useState('');\n    \n    const addNew = (e) => {\n        e.preventDefault();\n        console.log('creating new pet..')\n        const newPet={name:name, type: type, description: description, skill1: skill1, skill2:skill2, skill3:skill3}\n        console.log(newPet)\n        axios.post('http://localhost:8000/api/pets/new', newPet)\n            .then(res=>{\n                console.log(res)\n\n            if (res.data.errors){\n                setErrors(res.data.errors)\n            }\n            else{\n                navigate('/')\n            }\n        })\n        .catch(err => console.log(err))\n    }\n        return(\n        <div className=\"form\">\n        <h1>Add a Pet to Our Family!</h1>\n        <form onSubmit={(e) =>  addNew(e) }>\n            <p>Pet Name: <input type=\"text\" onChange={(e)=>setName(e.target.value)}/></p>\n            {errors.name ? <p style={{color:'red'}}>{errors.name.message}</p> : ''}\n            <p>Pet Type: <input type=\"text\" onChange={(e)=>setType(e.target.value)}/></p>\n            {errors.type ? <p style={{color:'red'}}>{errors.type.message}</p> : ''}\n            <p>Pet Description:<input type=\"text\" onChange={(e)=>setDescription(e.target.value)}/></p>\n            {errors.description ? <p style={{color:'red'}}>{errors.description.message}</p> : ''}\n            <p>Skill 1:<input type=\"text\" onChange={(e)=>setSkill1(e.target.value)}/></p>\n            <p>Skill 2:<input type=\"text\" onChange={(e)=>setSkill2(e.target.value)}/></p>\n            <p>Skill 3:<input type=\"text\" onChange={(e)=>setSkill3(e.target.value)}/></p>\n            <p><input type='submit' value='Add Pet!'/></p>\n            <Link to='/'>See all the pets</Link>\n        </form>\n    </div>\n    );\n}\nexport default Form;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { navigate, Link} from '@reach/router';\n\nconst Edit=(props)=>{\n    const[name, setName]=useState('');\n    const [type, setType]=useState('')\n    const [description, setDescription]=useState('')\n    const[skill1, setSkill1]=useState('');\n    const[skill2, setSkill2]=useState('');\n    const[skill3, setSkill3]=useState('');\n    const [errors, setErrors]=useState('');\n    useEffect(()=>{\n        axios.get(`http://localhost:8000/api/singlepet/${props._id}`)\n            .then(res=>{\n                console.log(res)\n                setName(res.data.single.name)\n                setType(res.data.single.type)\n                setDescription(res.data.single.description)\n                setSkill1(res.data.single.skill1)\n                setSkill2(res.data.single.skill2)\n                setSkill3(res.data.single.skill3)\n\n\n            })\n\n    }, []);\n    const updatePet=(e)=>{\n        e.preventDefault();\n        const updatePet={name, type, description, skill1, skill2, skill3};\n        axios.put(`http://localhost:8000/api/pets/edit/${props._id}`, updatePet)\n            .then(res=>{\n                console.log(res)\n                if(res.data.errors){\n                    setErrors(res.data.errors);\n                }\n                else{\n                    navigate('/');\n                }\n        })\n            .catch(err=> console.log(err))\n    }\n    return(\n        <div>\n            <h1>Edit Pet!</h1>\n            <form onSubmit={updatePet}>\n            <p>Pet Name: <input type=\"text\" onChange={(e)=>setName(e.target.value)} value={name}/></p>\n            {errors.name ? <p style={{color:'red'}}>{errors.name.message}</p> : ''}\n            <p>Pet Type: <input type=\"text\" onChange={(e)=>setType(e.target.value)} value={type}/></p>\n            {errors.type ? <p style={{color:'red'}}>{errors.type.message}</p> : ''}\n            <p>Pet Description:<input type=\"text\" onChange={(e)=>setDescription(e.target.value)} value={description}/></p>\n            {errors.description ? <p style={{color:'red'}}>{errors.description.message}</p> : ''}\n            <p>Skill 1:<input type=\"text\" onChange={(e)=>setSkill1(e.target.value)} value={skill1}/></p>\n            <p>Skill 2:<input type=\"text\" onChange={(e)=>setSkill2(e.target.value)}value={skill2}/></p>\n            <p>Skill 3:<input type=\"text\" onChange={(e)=>setSkill3(e.target.value)} value={skill3}/></p>\n            <p><input type='submit' value='Edit Pet!'/></p>\n            <Link to='/'>Home</Link>\n        </form>\n        </div>\n    );\n}\n\nexport default Edit;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst SinglePet =(props)=>{\n    const[pet, setPet]=useState('');\n    useEffect(()=>{\n        axios.get(`http://localhost:8000/api/singlepet/${props._id}`)\n            .then( res =>{\n                console.log('getting dog..')\n                console.log(res.data)\n                setPet(res.data.single)\n                console.log(pet)\n            })\n            .catch (err => console.log(err))\n\n    }, []);\n\n    const adoptPet=(e)=>{\n        e.preventDefault();\n        axios.delete(`http://localhost:8000/api/delete/${props._id}`)\n            .then(res => {\n                console.log(res)\n                navigate('/')\n            })\n            .catch(err => console.log(err))\n    }\n\n    return(\n        <div>\n            <h1 style={{backgroundColor: 'green', width:'600px', margin:'10px auto', marginBottom: '50px'}}>Pet Shelter</h1>\n            <h3>Details about: {pet.name}</h3>\n            <div className='details'>\n            <h4>Description: <p>{pet.description}</p> </h4>\n            <h4>Skills: <p>{pet.skill1}</p><p>{pet.skill2}</p> <p>{pet.skill3}</p>\n            </h4></div>\n        <form onSubmit={(e)=>adoptPet(e)}> \n            <input className='adoptbtn' type='Submit' value=\"Adopt Pet!\"/>\n        </form>\n        </div>\n    );\n}\n\nexport default SinglePet;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { navigate, Link} from '@reach/router';\n\nconst AllPets=(props)=>{\n    const [pets, setPets]=useState([]);\n    const fetchPets=()=>{\n        axios.get('http://localhost:8000/api/pets')\n            .then(res => {\n                console.log(res)\n                setPets(res.data)\n        })\n            .catch(err => console.log(err));\n    }\n    useEffect( ()=>{\n        fetchPets();\n    }, [pets]);\n\n    return(\n        <div>\n            <h1 style={{margin:'auto'}}>All these wonderful pets need homes!!</h1>\n\n        <table>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n        {pets.map( (pet)=>\n        <tr key={pet._id}>\n            <td >{pet.name}</td>\n            <td>{pet.type}</td>\n            <td><Link to={'/edit/'+pet._id}><button>Edit</button></Link>|<Link to={'/singlepet/'+pet._id}><button>Details</button></Link></td></tr>\n        )}\n\n        </tbody>\n        </table> \n        <Link to='/new'>Add a Pet to Our Family!</Link>\n\n        </div>\n    );\n}\n\nexport default AllPets;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Router } from '@reach/router';\nimport Form from './components/Form';\nimport Edit from './components/Edit';\nimport SinglePet from './components/SinglePet';\nimport AllPets from './components/AllPets';\n\nfunction App() {\n  const [pets, setPets]=useState([]);\n  \n\n  const fetchPets=()=>{\n    axios.get('http://localhost:8000/api/pets')\n      .then(res => {\n        console.log(res)\n        setPets(res.data)\n      })\n      .catch(err => console.log(err));\n  }\n  useEffect( ()=>{\n    fetchPets();\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n    \n    \n  \n    <Router>\n      <Form path=\"/new\"/>\n      <Edit path=\"/edit/:_id\"/>\n      <SinglePet path='/singlepet/:_id'/>\n      <AllPets path='/'/>\n    </Router>\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}